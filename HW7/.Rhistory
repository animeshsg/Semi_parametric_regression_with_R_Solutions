"crn" = ~ 1 + crn,
"inf" = ~ 1+ inf,
"cpr" = ~ 1 + cpr,
"sys" = ~ 1 + sys + s(sys,2),
"hra" = ~ 1+ hra + s(hra,2),
"pre" = ~ 1 + pre,
"type" = ~ 1 + type ,
"fra" = ~ 1 + fra,
"po2" = ~ 1 + po2,
"ph" = ~ 1 + ph,
"pco" = ~ 1 + pco,
"bic" = ~ 1 + bic,
"cre" = ~ 1 + cre ,
"loc" = ~ 1 + loc
))
library(aplore3) ; data(icu) ; help(icu)
str(icu)
head(icu,20)
fitInitial <- gam:::gam(sta ~age+gender+race+ser+can+crn+inf+cpr+sys+hra+pre+type+fra+po2+ph+pco+bic+cre+loc,family=binomial,data = icu)
stepFit <- step.Gam(fitInitial, scope =
list(
"age" = ~ 1 + age + s(age,2),
"gender" = ~ 1 + gender,
"race" = ~ 1 + race ,
"ser" = ~ 1 + ser,
"can" = ~ 1 + can,
"crn" = ~ 1 + crn,
"inf" = ~ 1+ inf,
"cpr" = ~ 1 + cpr,
"sys" = ~ 1 + sys + s(sys,2),
"hra" = ~ 1+ hra + s(hra,2),
"pre" = ~ 1 + pre,
"type" = ~ 1 + type ,
"fra" = ~ 1 + fra,
"po2" = ~ 1 + po2,
"ph" = ~ 1 + ph,
"pco" = ~ 1 + pco,
"bic" = ~ 1 + bic,
"cre" = ~ 1 + cre ,
"loc" = ~ 1 + loc
))
install.packages("gam")
install.packages("gam")
fitInitial <- gam:::gam(sta ~age+gender+race+ser+can+crn+inf+cpr+sys+hra+pre+type+fra+po2+ph+pco+bic+cre+loc,family=binomial,data = icu)
stepFit <- step.Gam(fitInitial, scope =
list(
"age" = ~ 1 + age + s(age,2),
"gender" = ~ 1 + gender,
"race" = ~ 1 + race ,
"ser" = ~ 1 + ser,
"can" = ~ 1 + can,
"crn" = ~ 1 + crn,
"inf" = ~ 1+ inf,
"cpr" = ~ 1 + cpr,
"sys" = ~ 1 + sys + s(sys,2),
"hra" = ~ 1+ hra + s(hra,2),
"pre" = ~ 1 + pre,
"type" = ~ 1 + type ,
"fra" = ~ 1 + fra,
"po2" = ~ 1 + po2,
"ph" = ~ 1 + ph,
"pco" = ~ 1 + pco,
"bic" = ~ 1 + bic,
"cre" = ~ 1 + cre ,
"loc" = ~ 1 + loc
))
knitr::opts_chunk$set(echo = TRUE)
library(aplore3) ; data(icu) ; help(icu)
str(icu)
head(icu,20)
fitInitial <- gam:::gam(sta ~age+gender+race+ser+can+crn+inf+cpr+sys+hra+pre+type+fra+po2+ph+pco+bic+cre+loc,family=binomial,data = icu)
stepFit <- step.Gam(fitInitial, scope =
list(
"age" = ~ 1 + age + s(age,2),
"gender" = ~ 1 + gender,
"race" = ~ 1 + race ,
"ser" = ~ 1 + ser,
"can" = ~ 1 + can,
"crn" = ~ 1 + crn,
"inf" = ~ 1+ inf,
"cpr" = ~ 1 + cpr,
"sys" = ~ 1 + sys + s(sys,2),
"hra" = ~ 1+ hra + s(hra,2),
"pre" = ~ 1 + pre,
"type" = ~ 1 + type ,
"fra" = ~ 1 + fra,
"po2" = ~ 1 + po2,
"ph" = ~ 1 + ph,
"pco" = ~ 1 + pco,
"bic" = ~ 1 + bic,
"cre" = ~ 1 + cre ,
"loc" = ~ 1 + loc
))
install.packages("gam")
install.packages("gam")
knitr::opts_chunk$set(echo = TRUE)
library(aplore3) ; data(icu) ; help(icu)
library(gam)
str(icu)
head(icu,20)
fitInitial <- gam:::gam(sta ~age+gender+race+ser+can+crn+inf+cpr+sys+hra+pre+type+fra+po2+ph+pco+bic+cre+loc,family=binomial,data = icu)
stepFit <- step.Gam(fitInitial, scope =
list(
"age" = ~ 1 + age + s(age,2),
"gender" = ~ 1 + gender,
"race" = ~ 1 + race ,
"ser" = ~ 1 + ser,
"can" = ~ 1 + can,
"crn" = ~ 1 + crn,
"inf" = ~ 1+ inf,
"cpr" = ~ 1 + cpr,
"sys" = ~ 1 + sys + s(sys,2),
"hra" = ~ 1+ hra + s(hra,2),
"pre" = ~ 1 + pre,
"type" = ~ 1 + type ,
"fra" = ~ 1 + fra,
"po2" = ~ 1 + po2,
"ph" = ~ 1 + ph,
"pco" = ~ 1 + pco,
"bic" = ~ 1 + bic,
"cre" = ~ 1 + cre ,
"loc" = ~ 1 + loc
))
print(names(stepFit$"model")[-1])
library(mgcv)
fitgam<-mgcv:::gam(sta~s(age)+as.factor(gender)+as.factor(can)+as.factor(cpr)+sys+as.factor(pre)+as.factor(type)+as.factor(ph)+as.factor(pco),family=binomial,data=icu)
summary(fitgam)
gam.check(fitgam)
newdatadf<-data.frame(
gender="Female",
age=79,
race="White",
ser="Medical",
can="No",
crn="No",
inf="No",
cpr="No",
sys=228,
hra=94,
pre="No",
type="Emergency",
fra="No",
po2="> 45",
ph=">= 7.25",
pco="> 45",
bic="< 18",
cre="> 2.0",
loc="Coma"
)
predObjdir <- predict(fitgam,newdata = newdatadf,
type = "response",se.fit = TRUE)
print(predObjdir)
fitTrainFullGLM <- glm(type ~ .,family = binomial,data = spamTrain)
set.seed(1) ; nTest <- 1000
indsTest <- sample(1:nrow(spam),nTest,replace = FALSE)
install.packages("kernlab")
library(kernlab) ; data(spam) ; help(spam)
print(names(spam))
set.seed(1) ; nTest <- 1000
indsTest <- sample(1:nrow(spam),nTest,replace = FALSE)
indsTrain <- setdiff(1:nrow(spam),indsTest)
spamTest <- spam[indsTest,]
spamTrain <- spam[indsTrain,]
fitTrainFullGLM <- glm(type ~ .,family = binomial,data = spamTrain)
print(summary(fitTrainFullGLM))
fitgam<-gam:::gam(type ~ .,family = binomial,data = spamTrain)
spam_scope<-gam.scope(spamTrain,arg="df=2",response=58)
print(spam_scope)
stepfit<-step.Gam(fitgam,scope=spam_scope)
library(aplore3) ; data(icu) ; help(icu)
library(gam)
str(icu)
head(icu,20)
fitInitial <- gam:::gam(sta ~age+gender+race+ser+can+crn+inf+cpr+sys+hra+pre+type+fra+po2+ph+pco+bic+cre+loc,family=binomial,data = icu)
stepFit <- step.Gam(fitInitial, scope =
list(
"age" = ~ 1 + age + s(age,2),
"gender" = ~ 1 + gender,
"race" = ~ 1 + race ,
"ser" = ~ 1 + ser,
"can" = ~ 1 + can,
"crn" = ~ 1 + crn,
"inf" = ~ 1+ inf,
"cpr" = ~ 1 + cpr,
"sys" = ~ 1 + sys + s(sys,2),
"hra" = ~ 1+ hra + s(hra,2),
"pre" = ~ 1 + pre,
"type" = ~ 1 + type ,
"fra" = ~ 1 + fra,
"po2" = ~ 1 + po2,
"ph" = ~ 1 + ph,
"pco" = ~ 1 + pco,
"bic" = ~ 1 + bic,
"cre" = ~ 1 + cre ,
"loc" = ~ 1 + loc
))
install.packages("gam")
install.packages("gam")
fitInitial <- gam:::gam(sta ~age+gender+race+ser+can+crn+inf+cpr+sys+hra+pre+type+fra+po2+ph+pco+bic+cre+loc,family=binomial,data = icu)
stepFit <- step.Gam(fitInitial, scope =
list(
"age" = ~ 1 + age + s(age,2),
"gender" = ~ 1 + gender,
"race" = ~ 1 + race ,
"ser" = ~ 1 + ser,
"can" = ~ 1 + can,
"crn" = ~ 1 + crn,
"inf" = ~ 1+ inf,
"cpr" = ~ 1 + cpr,
"sys" = ~ 1 + sys + s(sys,2),
"hra" = ~ 1+ hra + s(hra,2),
"pre" = ~ 1 + pre,
"type" = ~ 1 + type ,
"fra" = ~ 1 + fra,
"po2" = ~ 1 + po2,
"ph" = ~ 1 + ph,
"pco" = ~ 1 + pco,
"bic" = ~ 1 + bic,
"cre" = ~ 1 + cre ,
"loc" = ~ 1 + loc
))
library(aplore3) ; data(icu) ; help(icu)
library(gam)
str(icu)
head(icu,20)
fitInitial <- gam:::gam(sta ~age+gender+race+ser+can+crn+inf+cpr+sys+hra+pre+type+fra+po2+ph+pco+bic+cre+loc,family=binomial,data = icu)
stepFit <- step.Gam(fitInitial, scope =
list(
"age" = ~ 1 + age + s(age,2),
"gender" = ~ 1 + gender,
"race" = ~ 1 + race ,
"ser" = ~ 1 + ser,
"can" = ~ 1 + can,
"crn" = ~ 1 + crn,
"inf" = ~ 1+ inf,
"cpr" = ~ 1 + cpr,
"sys" = ~ 1 + sys + s(sys,2),
"hra" = ~ 1+ hra + s(hra,2),
"pre" = ~ 1 + pre,
"type" = ~ 1 + type ,
"fra" = ~ 1 + fra,
"po2" = ~ 1 + po2,
"ph" = ~ 1 + ph,
"pco" = ~ 1 + pco,
"bic" = ~ 1 + bic,
"cre" = ~ 1 + cre ,
"loc" = ~ 1 + loc
))
library(aplore3) ; data(icu) ; help(icu)
library(gam)
str(icu)
head(icu,20)
fitInitial <- gam:::gam(sta ~age+gender+race+ser+can+crn+inf+cpr+sys+hra+pre+type+fra+po2+ph+pco+bic+cre+loc,family=binomial,data = icu)
stepFit <- step.Gam(fitInitial, scope =
list(
"age" = ~ 1 + age + s(age,2),
"gender" = ~ 1 + gender,
"race" = ~ 1 + race ,
"ser" = ~ 1 + ser,
"can" = ~ 1 + can,
"crn" = ~ 1 + crn,
"inf" = ~ 1+ inf,
"cpr" = ~ 1 + cpr,
"sys" = ~ 1 + sys + s(sys,2),
"hra" = ~ 1+ hra + s(hra,2),
"pre" = ~ 1 + pre,
"type" = ~ 1 + type ,
"fra" = ~ 1 + fra,
"po2" = ~ 1 + po2,
"ph" = ~ 1 + ph,
"pco" = ~ 1 + pco,
"bic" = ~ 1 + bic,
"cre" = ~ 1 + cre ,
"loc" = ~ 1 + loc
))
install.packages("gam")
install.packages("gam")
fitInitial <- gam:::gam(sta ~age+gender+race+ser+can+crn+inf+cpr+sys+hra+pre+type+fra+po2+ph+pco+bic+cre+loc,family=binomial,data = icu)
stepFit <- step.Gam(fitInitial, scope =
list(
"age" = ~ 1 + age + s(age,2),
"gender" = ~ 1 + gender,
"race" = ~ 1 + race ,
"ser" = ~ 1 + ser,
"can" = ~ 1 + can,
"crn" = ~ 1 + crn,
"inf" = ~ 1+ inf,
"cpr" = ~ 1 + cpr,
"sys" = ~ 1 + sys + s(sys,2),
"hra" = ~ 1+ hra + s(hra,2),
"pre" = ~ 1 + pre,
"type" = ~ 1 + type ,
"fra" = ~ 1 + fra,
"po2" = ~ 1 + po2,
"ph" = ~ 1 + ph,
"pco" = ~ 1 + pco,
"bic" = ~ 1 + bic,
"cre" = ~ 1 + cre ,
"loc" = ~ 1 + loc
))
library(aplore3) ; data(icu) ; help(icu)
library(gam)
str(icu)
head(icu,20)
fitInitial <- gam:::gam(sta ~age+gender+race+ser+can+crn+inf+cpr+sys+hra+pre+type+fra+po2+ph+pco+bic+cre+loc,family=binomial,data = icu)
stepFit <- step.Gam(fitInitial, scope =
list(
"age" = ~ 1 + age + s(age,2),
"gender" = ~ 1 + gender,
"race" = ~ 1 + race ,
"ser" = ~ 1 + ser,
"can" = ~ 1 + can,
"crn" = ~ 1 + crn,
"inf" = ~ 1+ inf,
"cpr" = ~ 1 + cpr,
"sys" = ~ 1 + sys + s(sys,2),
"hra" = ~ 1+ hra + s(hra,2),
"pre" = ~ 1 + pre,
"type" = ~ 1 + type ,
"fra" = ~ 1 + fra,
"po2" = ~ 1 + po2,
"ph" = ~ 1 + ph,
"pco" = ~ 1 + pco,
"bic" = ~ 1 + bic,
"cre" = ~ 1 + cre ,
"loc" = ~ 1 + loc
))
gc()
knitr::opts_chunk$set(echo = TRUE)
library(aplore3) ; data(icu) ; help(icu)
library(gam)
str(icu)
head(icu,20)
fitInitial <- gam:::gam(sta ~age+gender+race+ser+can+crn+inf+cpr+sys+hra+pre+type+fra+po2+ph+pco+bic+cre+loc,family=binomial,data = icu)
stepFit <- step.Gam(fitInitial, scope =
list(
"age" = ~ 1 + age + s(age,2),
"gender" = ~ 1 + gender,
"race" = ~ 1 + race ,
"ser" = ~ 1 + ser,
"can" = ~ 1 + can,
"crn" = ~ 1 + crn,
"inf" = ~ 1+ inf,
"cpr" = ~ 1 + cpr,
"sys" = ~ 1 + sys + s(sys,2),
"hra" = ~ 1+ hra + s(hra,2),
"pre" = ~ 1 + pre,
"type" = ~ 1 + type ,
"fra" = ~ 1 + fra,
"po2" = ~ 1 + po2,
"ph" = ~ 1 + ph,
"pco" = ~ 1 + pco,
"bic" = ~ 1 + bic,
"cre" = ~ 1 + cre ,
"loc" = ~ 1 + loc
))
print(names(stepFit$"model")[-1])
library(kernlab) ; data(spam) ; help(spam)
library(gam)
print(names(spam))
set.seed(1) ; nTest <- 1000
indsTest <- sample(1:nrow(spam),nTest,replace = FALSE)
indsTrain <- setdiff(1:nrow(spam),indsTest)
spamTest <- spam[indsTest,]
spamTrain <- spam[indsTrain,]
fitTrainFullGLM <- glm(type ~ .,family = binomial,data = spamTrain)
print(summary(fitTrainFullGLM))
fitgam<-gam:::gam(type ~ .,family = binomial,data = spamTrain)
spam_scope<-gam.scope(spamTrain,arg="df=2",response=58)
print(spam_scope)
stepfit<-step.Gam(fitgam,scope=spam_scope)
library(mgcv)
fitgam<-mgcv:::gam(sta~s(age)+as.factor(gender)+as.factor(can)+as.factor(cpr)+sys+as.factor(pre)+as.factor(type)+as.factor(ph)+as.factor(pco)+as.factor(loc),family=binomial,data=icu)
summary(fitgam)
gam.check(fitgam)
newdatadf<-data.frame(
gender="Female",
age=79,
race="White",
ser="Medical",
can="No",
crn="No",
inf="No",
cpr="No",
sys=228,
hra=94,
pre="No",
type="Emergency",
fra="No",
po2="> 45",
ph=">= 7.25",
pco="> 45",
bic="< 18",
cre="> 2.0",
loc="Coma"
)
predObjdir <- predict(fitgam,newdata = newdatadf,
type = "response",se.fit = TRUE)
print(predObjdir)
func<-names(stepFit$"model")[-1]
print(func)
fitgam3<-gam:::gam(type ~ .,family = binomial,data = spamTrain)
spam_scope<-gam.scope(spamTrain,arg="df=2",response=58)
stepfit3<-step.Gam(fitgam3,scope=spam_scope)
library(kernlab) ; data(spam) ; help(spam)
library(gam)
print(names(spam))
fitgam3<-gam:::gam(type ~ .,family = binomial,data = spamTrain)
spam_scope<-gam.scope(spamTrain,arg="df=2",response=58)
stepfit3<-step.Gam(fitgam3,scope=spam_scope)
knitr::opts_chunk$set(echo = TRUE)
library(kernlab) ; data(spam) ; help(spam)
library(gam)
print(names(spam))
set.seed(1) ; nTest <- 1000
indsTest <- sample(1:nrow(spam),nTest,replace = FALSE)
indsTrain <- setdiff(1:nrow(spam),indsTest)
spamTest <- spam[indsTest,]
spamTrain <- spam[indsTrain,]
fitTrainFullGLM <- glm(type ~ .,family = binomial,data = spamTrain)
print(summary(fitTrainFullGLM))
fitgam3<-gam:::gam(type ~ .,family = binomial,data = spamTrain)
spam_scope<-gam.scope(spamTrain,arg="df=2",response=58)
stepfit3<-step.Gam(fitgam3,scope=spam_scope)
func<-names(stepFit3$"model")[-1]
func<-names(stepfit3$"model")[-1]
print(func)
func<-stepfit3$"model"
print(func)
func<-names(stepfit3$"model")[-1]
print(func)
func<-list(names(stepfit3$"model")[-1])
print(func)
func<-names(stepfit3$"model")[-1]
library(mgcv)
fitmgcvgam3<-mgcv:::gam(type~func,family=binomial,data=spamTrain)
func<-names(stepfit3$"model")[-1]
print(func)
library(mgcv)
fitmgcvgam3<-mgcv:::gam(type~func,family=binomial,data=spamTrain)
func<-names(stepfit3$"model")[-1]
print(as.formula(func))
func<-names(stepfit3$"model")[-1]
print(func)
library(mgcv)
fitmgcvgam3<-mgcv:::gam(type~func,family=binomial,data=spamTrain)
func<-names(stepfit3$"model")[-1]
print(func)
library(mgcv)
fitmgcvgam3<-mgcv:::gam(type~make+address+all+num3d+s(our)+over+s(remove)+internet+order+mail+receive+will+people+report+addresses+free+business+email+you+credit+your+font+num000+s(money)+s(hp)+s(george)+hpl+s(num650)+lab+labs+num857+data+num415+num85+technology+num1999+parts+pm+direct+cs+meeting+original+project+re+edu+table+conference+charSemicolon+charRoundbracket+charSquarebracket+s(charExclamation)+s(charDollar)+charHash+capitalAve+capitalLong+s(capitalTotal),family=binomial,data=spamTrain)
summary(fitmgcvgam3)
library(caret)
install.packages("caret")
install.packages("caret")
library(caret)
install.packages("ggplot2")
library(caret)
library(rlang)
knitr::opts_chunk$set(echo = TRUE)
library(caret)
library(caret)
print(func)
library(caret)
pdata <- predict(fitmgcvgam3, newdata = spamTest, type = "response")
library(caret)
pdata <- predict(fitmgcvgam3, newdata = spamTest, type = "response")
confusionMatrix(data = as.numeric(pdata>0.5), reference = spamTest$type )
library(caret)
pdata <- predict(fitmgcvgam3, newdata = spamTest, type = "response")
print(pdata)
confusionMatrix(data = as.numeric(pdata>0.5), reference = spamTest$type )
library(caret)
pdata <- predict(fitmgcvgam3, newdata = spamTest, type = "response")
confusionMatrix(data = as.numeric(pdata>0.5), reference = as.factor(spamTest$type) )
data = as.numeric(pdata>0.5)
data = as.numeric(pdata>0.5)
data
data = as.factor(pdata>0.5)
data
library(caret)
pdata <- predict(fitmgcvgam3, newdata = spamTest, type = "response")
confusionMatrix(data = as.factor(pdata>0.5), reference = as.factor(spamTest$type) )
data = as.factor(pdata>0.5)
spamTest$type
data = as.factor(pdata>0.5)
as.factor(spamTest$type)
data = as.factor(pdata>0.5)
factor(spamTest$type)
data = factor(pdata>0.5)
#factor(spamTest$type)
data
data = factor(pdata>0.5)
factor(spamTest$type)
library(caret)
pdata <- predict(fitmgcvgam3, newdata = spamTest, type = "response")
SpamTestpred = rep("nonspam", dim(spamTest)[1])
SpamTestpred[pdata>0.5]="spam"
SpamTestpred
#confusionMatrix(data = as.factor(pdata>0.5), reference = as.factor(spamTest$type) )
library(caret)
pdata <- predict(fitmgcvgam3, newdata = spamTest, type = "response")
SpamTestpred = rep("nonspam", dim(spamTest)[1])
SpamTestpred[pdata>0.5]="spam"
confusionMatrix(data = SpamTestpred, reference = as.factor(spamTest$type) )
data = factor(pdata>0.5)
spamTest$type
library(caret)
pdata <- predict(fitmgcvgam3, newdata = spamTest, type = "response")
SpamTestpred = rep("nonspam", dim(spamTest)[1])
SpamTestpred[pdata>0.5]="spam"
confusionMatrix(data = as.factor(SpamTestpred), reference = spamTest$type)
fitmgcvgam4<-mgcv:::gam(type~s(make)+s(address)+s(all)+s(num3d)+s(our)+s(over)+s(remove)+s(internet)+s(order)+s(mail)+s(receive)+s(will)+s(people)+s(report)+s(addresses)+s(free)+s(business)+s(email)+s(you)+s(credit)+s(your)+s(font)+s(num000)+s(money)+s(hp)+s(george)+s(hpl)+s(num650)+s(lab)+s(labs)+s(num857)+s(data)+s(num415)+s(num85)+s(technology)+s(num1999)+s(parts)+s(pm)+s(direct)+s(cs)+s(meeting)+s(original)+s(project)+s(re)+s(edu)+s(table)+s(conference)+s(charSemicolon)+s(charRoundbracket)+s(charSquarebracket)+s(charExclamation)+s(charDollar)+s(charHash)+s(capitalAve)+s(capitalLong)+s(capitalTotal),family=binomial,data=spamTrain)
